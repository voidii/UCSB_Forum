{"version":3,"sources":["Comp/pic/UCSB.jpg","Comp/Tab.js","Comp/Tablist.js","Comp/Home.js","Comp/reply.js","Comp/roommate.js","Comp/Class_chat_screen.js","Comp/class_chat.js","Comp/Class_list.js","Comp/AddClass.js","Comp/class_room.js","Comp/About.js","Comp/body.js","Comp/config.js","Comp/fire.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tab","addStyling","props","tab","id","activeTab","backgroundColor","className","style","this","onClick","changeTab","bind","title","Component","Tablist","map","indTab","Home","classname","src","require","width","float","reply","console","log","id_for_message","Roommate","writeUserData","firebase","ref","set","state","messages","getUserData","on","snapshot","message","val","setState","openModal","developer","showModal","closeModal","handleSubmit","event","preventDefault","name","refs","value","uid","des","Email","date","Date","toLocaleString","warning","length","innerHTML","getTime","toString","push","removeData","newState","filter","data","updateData","prevProps","prevState","href","onSubmit","type","placeholder","isOpen","overlayClassName","onAfterOpen","handleAfterOpenFunc","shouldCloseOnOverlayClick","ClassChatScreen","renderBubble","wrapperStyle","left","text","createdAt","UTC","user","avatar","image","isAuthenticated","loadMessages","database","snap","key","JSON","stringify","replace","saveMessage","catch","error","Button","slice","reverse","onSend","scrollToBottom","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","AppBar","position","color","Toolbar","Typography","variant","styles","container","chat","renderChatHeader","renderChat","settings","renderSettingsHeader","renderSignOutButton","flex","display","flexDirection","height","borderWidth","borderColor","borderRightStyle","borderLeftStyle","ClassChat","class","activeClass","changeClass","Class_list","handleOnInputChange","query","target","toUpperCase","getClassesData","searchClass","classes","orderByChild","equalTo","result","indClass","onChange","renderList","AddClass","i","len","curClass","margin","top","right","bottom","ClassRoom","edu","Fab","aria-label","Abour","body","displayContent","About","config","apiKey","authDomain","databaseURL","app","googleProvider","Rebase","createClass","GoogleAuthProvider","loginstyle","maxWidth","padding","border","borderRadius","App","handleAfterCloseFunc","openRef","overlayRef","contentRef","getParent","document","querySelector","Logout","auth","signOut","then","authenicated","authWithGoogle","authWithEmailPassward","redirect","removeAuthListener","onAuthStateChanged","email","substr","signInWithPopup","toaster","show","intent","Intent","DANGER","table","emailInput","password","passwordInput","fetchSignInMethodsForEmail","providers","createUserWithEmailAndPassword","indexOf","signInWithEmailAndPassword","loginForm","reset","WARNING","mesaage","element","form","input","fontSize","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e3c675c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/UCSB.83a7d2be.jpg\";","import React, { Component } from 'react';\r\n\r\nclass Tab extends Component {\r\n    addStyling = () => {\r\n        if(this.props.tab.id === this.props.activeTab){\r\n            return {backgroundColor: '#C0E4FF'}\r\n        }\r\n        else{\r\n            return {backgroundColor: '#87CCFF'}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = 'tab' \r\n            style = {this.addStyling()}\r\n            onClick={this.props.changeTab.bind(this, this.props.tab.id)}\r\n            >\r\n                <h2>\r\n                    {this.props.tab.title}\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from 'react';\r\nimport Tab from './Tab'\r\n\r\nclass Tablist extends Component {\r\n    render() {\r\n        const tabs = [\r\n          {\r\n            id: 1,\r\n            title: '首页'\r\n          },\r\n          {\r\n            id: 2,\r\n            title: '找室友'\r\n          },\r\n          {\r\n            id: 3,\r\n            title: '找课友'\r\n          },\r\n          {\r\n            id: 4,\r\n            title: '找二手'\r\n          },\r\n          {\r\n            id: 5,\r\n            title: '顺风车'\r\n          },\r\n          {\r\n            id: 6,\r\n            title: '关于UCSB'\r\n          }\r\n          ]\r\n        return tabs.map((indTab) => (\r\n            <Tab tab = {indTab} \r\n            changeTab={this.props.changeTab}\r\n            activeTab = {this.props.activeTab}/>\r\n\r\n        ));\r\n    }\r\n}\r\n\r\nexport default Tablist;","import React, { Component } from 'react';\r\nimport './Home.css'\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className = \"content\"> \r\n                <div classname = 'words'>\r\n                    <b>测试用的贴吧</b>\r\n                    <br></br>\r\n                    <br></br>\r\n                    测试产品，想做成百度贴吧那样的样子然后给我们学校的学生用\r\n                    <br></br>\r\n                    <br></br>\r\n                    主要是想方便大家，UCSB万事屋之类的微信号其实局限性很大，也不够自由，时不时还恰烂钱\r\n                    <br></br>\r\n                    <br></br>\r\n                    还是想用这种贴吧的形式大家可以自由发帖，感觉会方便很多很多\r\n                </div>\r\n            </div>\r\n\r\n                <div classname=\"home\">\r\n                    <img classname = \"image\" src={ require('./pic/UCSB.jpg') } style={{width: '40%', float: 'right'}}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nclass reply extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {console.log(this.props.id_for_message)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reply;","import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\nimport Reply from './reply';\r\nimport * as firebase from 'firebase';\r\nimport './Comment.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Roommate extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            messages: [],\r\n            showModal: false,\r\n            id_for_message:\"\"\r\n        }\r\n    }\r\n    writeUserData = () => {\r\n        firebase.database().ref('/message').set(this.state.messages);\r\n        console.log('DATA SAVED');\r\n    }\r\n      \r\n    getUserData = () => {\r\n        let ref = firebase.database().ref('/message');\r\n        ref.on('value', snapshot => {\r\n          const message = snapshot.val();\r\n          this.setState(\r\n            {\r\n              messages: message\r\n            }\r\n          );\r\n        });\r\n        console.log('DATA RETRIEVED');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData();\r\n    }\r\n      \r\n    componentDidUpdate(prevProps, prevState) {\r\n        // check on previous state\r\n        // only write when it's different with the new state\r\n        if (prevState !== this.state) {\r\n          this.writeUserData();\r\n        }\r\n    }\r\n\r\n    openModal = (developer) => {\r\n      this.setState({ \r\n        showModal: true,\r\n        id_for_message: developer.id_for_message\r\n      });\r\n    }\r\n\r\n    closeModal = () => {\r\n      this.setState({ \r\n        showModal: false,\r\n        id_for_message:\"\"\r\n      });\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.state;\r\n        return(\r\n          <div className=\"comment-box\">\r\n            <div className='comment'>\r\n              <div >\r\n              { \r\n                messages.map(developer => \r\n                  <div>\r\n                    <div className=\"editContent\">\r\n                      <div className=\"content\" href='#' onClick={ () => this.openModal(developer)}>{ developer.message }</div>\r\n                      <div className='metadata'>\r\n\t              \t      <div className='author'>{developer.name}</div>\r\n                        <div className='author'>{developer.des}</div>\r\n\t              \t      <div className='date'>{developer.date}</div>\r\n\t              \t      <a className='option' href='#' onClick={ () => this.removeData(developer)}>Delete</a>\r\n\t              \t      <a className='option' href='#' onClick={ () => this.updateData(developer)}>Edit</a>\r\n\t                  </div>\r\n                    </div>\r\n                  </div>\r\n                  )\r\n              } \r\n              </div>\r\n            </div>\r\n            <div className='comment-box'>\r\n              <div className='col-xl-12'>\r\n                <form className='submitform' onSubmit={ this.handleSubmit }>\r\n                <span className='warning' ref='warning'></span>\r\n                    <input type='hidden' ref='uid' />\r\n                    <div className='form-row'>\r\n                        <input type=\"text\" placeholder='Name' ref='name'/>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <input type=\"text\" placeholder='Description' ref='des'/>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <textarea placeholder='Message' ref='message'></textarea>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <input type=\"text\" placeholder='Email' ref='Email'/>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <button>Post</button>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <Modal \r\n              isOpen={this.state.showModal}\r\n              overlayClassName=\"overlay\"   \r\n              className=\"modal\"   \r\n\r\n              onAfterOpen={this.handleAfterOpenFunc}  \r\n              shouldCloseOnOverlayClick={true}   \r\n            >\r\n              <Reply id_for_message = {this.state.id_for_message}/>\r\n              <button onClick={this.closeModal}>关闭模态框</button>\r\n            </Modal>\r\n\r\n\r\n\r\n          </div>\r\n        )\r\n      }\r\n      \r\n      handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let name = this.refs.name.value;\r\n        let message = this.refs.message.value;\r\n        let uid = this.props.uid;\r\n        let des = this.refs.des.value;\r\n        console.log(uid);\r\n      \r\n        let Email = this.refs.Email.value;\r\n        let date = new Date().toLocaleString();\r\n        let warning = this.refs.warning;\r\n\r\n        if(!(name.length < 20 && name.length > 5)) {\r\n          warning.innerHTML = '*Name must be longer than 5 characters, less than 20';\r\n          return null;\r\n        }else if(!(des.length < 100) && des.length !== 0) {\r\n          warning.innerHTML = '* Describption must be less than 100 character';\r\n          return null;\r\n        }else if(!(message.length < 500 && message.length > 15)) {\r\n          warning.innerHTML = '* Message must be longer than 15 characters, less than 500 characters';\r\n          return null;\r\n        }else \r\n        {\r\n          warning.innerHTML = '';\r\n        }\r\n      \r\n        if (uid && name && message){\r\n          //const { messages } = this.state;\r\n          //const devIndex = messages.findIndex(data => {\r\n          //  return data.uid === uid \r\n          //});\r\n          //messages[devIndex].name = name;\r\n          //messages[devIndex].message = message;\r\n          //messages[devIndex].date = date;\r\n          //messages[devIndex].des = des;\r\n          //messages[devIndex].Email = Email;\r\n          //this.setState({ messages });\r\n          const id_for_message = new Date().getTime().toString() + uid;\r\n          const { messages } = this.state;\r\n          messages.push({ id_for_message, uid, name, message,date,des,Email })\r\n          this.setState({ messages });\r\n        }\r\n      \r\n        this.refs.name.value = '';\r\n        this.refs.message.value = '';\r\n        //this.refs.uid.value = '';\r\n        this.refs.des.value = '';\r\n        this.refs.Email.value = '';\r\n\r\n      }\r\n      \r\n      removeData = (developer) => {\r\n        const { messages } = this.state;\r\n        const newState = messages.filter(data => {\r\n          return data.date !== developer.date;\r\n        });\r\n        this.setState({ messages: newState });\r\n      }\r\n      \r\n      updateData = (developer) => {\r\n        //this.refs.uid.value = developer.uid;\r\n        this.refs.name.value = developer.name;\r\n        this.refs.message.value = developer.message;\r\n        //this.refs.date.value = developer.date;\r\n      }\r\n       \r\n}\r\n\r\nexport default Roommate;","import React, { Component } from \"react\";\r\nimport { GiftedChat, Bubble } from \"react-web-gifted-chat\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\n\r\nclass ClassChatScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      messages: [{\r\n        id: 1,\r\n        text: 'My message',\r\n        createdAt: new Date(Date.UTC(2016, 5, 11, 17, 20, 0)),\r\n        user: {\r\n          id: 2,\r\n          name: 'React',\r\n          avatar: 'https://facebook.github.io/react/img/logo_og.png',\r\n        },\r\n        image: \"http://5b0988e595225.cdn.sohucs.com/images/20190311/6918fe35e3424cc99fd759e246397af9.jpeg\",\r\n        \r\n      }],\r\n      user: {\r\n        id: props.uid,\r\n      },\r\n      isAuthenticated: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages () {\r\n    let ref = firebase.database().ref(\"/\" + this.props.title + \"/messages/\");\r\n    ref.on(\"child_added\", snap => {\r\n      const message = snap.val();\r\n      message.id = snap.key;\r\n      if(message.createdAt)\r\n      {\r\n        message.createdAt = new Date(message.createdAt)\r\n      }\r\n      const { messages } = this.state;\r\n      messages.push(message);\r\n      this.setState(\r\n        {\r\n          messages\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  onSend(messages) {\r\n    console.log(messages)\r\n    for (var message of messages) {\r\n      message.createdAt = JSON.stringify(new Date()).replace(/['\"]+/g, '')\r\n      this.saveMessage(message);\r\n    }\r\n  }\r\n\r\n  saveMessage(message) {\r\n    return firebase\r\n      .database()\r\n      .ref(\"/\" + this.props.title + \"/messages\")\r\n      .push(message)\r\n      .catch(function(error) {\r\n        console.error(\"Error saving message to Database:\", error);\r\n      });\r\n  }\r\n\r\n  renderBubble = props => {\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          left: {\r\n            backgroundColor: '#f0f0f0',\r\n          },\r\n        }}\r\n      />\r\n    )\r\n    }\r\n\r\n  renderSignOutButton() {\r\n    if (this.state.isAuthenticated) {\r\n      return <Button /*onClick={() => this.signOut()}*/>Sign out</Button>;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  renderChat() {\r\n    return (\r\n      <GiftedChat\r\n        user={this.state.user}\r\n        messages={this.state.messages.slice().reverse()}\r\n        onSend={messages=> this.onSend(messages)}\r\n        scrollToBottom\r\n        renderBubble={this.renderBubble}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderChannels() {\r\n    return (\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemAvatar>\r\n            <Avatar>D</Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Default\" />\r\n        </ListItem>\r\n      </List>\r\n    );\r\n  }\r\n\r\n  renderChannelsHeader() {\r\n    return (\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Channels\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n  renderChatHeader() {\r\n    return (\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            {this.props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n  renderSettingsHeader() {\r\n    return (\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Settings\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.container}>\r\n        <div style={styles.chat}>\r\n          {this.renderChatHeader()}\r\n          {this.renderChat()}\r\n        </div>\r\n        <div style={styles.settings}>\r\n          {this.renderSettingsHeader()}\r\n          {this.renderSignOutButton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"100%\",\r\n  },\r\n  chat: {\r\n    display: \"flex\",\r\n    flex: 3,\r\n    flexDirection: \"column\",\r\n    borderWidth: \"1px\",\r\n    borderColor: \"#ccc\",\r\n    borderRightStyle: \"solid\",\r\n    borderLeftStyle: \"solid\",\r\n  },\r\n  settings: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n  },\r\n};\r\nexport default ClassChatScreen;\r\n//ReactDOM.render(<App />, document.getElementById(\"root\"));","import React, { Component } from 'react';\r\nimport ClassChatScreen from './Class_chat_screen'\r\nimport './class_chat.css';\r\n\r\nclass ClassChat extends Component {\r\n    addStyling = () => {\r\n        if(this.props.class.title === this.props.activeClass){\r\n            return {backgroundColor: '#C0E4FF'}\r\n        }\r\n        else{\r\n            return {backgroundColor: '#87CCFF'}\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            <div className = \"list\"\r\n            style = {this.addStyling()}\r\n            onClick={this.props.changeClass.bind(this, this.props.class.title)}\r\n            >\r\n                <h2>\r\n                    {this.props.class.title}\r\n                </h2>\r\n            </div> \r\n            {this.props.class.title === this.props.activeClass && \r\n            <div className = \"screen\"> \r\n            <div className = \"sub\">\r\n                <ClassChatScreen\r\n                    uid = {this.props.uid}\r\n                    title = {this.props.class.title}\r\n                />\r\n                </div>\r\n            </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassChat","import React, { Component } from 'react';\r\nimport ClassChat from './class_chat';\r\nimport firebase from \"firebase\";\r\n\r\nclass Class_list extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      classes:[\r\n      ],\r\n      query:\"\"\r\n    }\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.getClassesData();\r\n  }\r\n\r\n  searchClass(){\r\n    var ref = firebase.database().ref(\"UCSB/Classes\");\r\n    ref.orderByChild(\"title\").equalTo(this.state.query).on(\"child_added\", snapshot => {\r\n      console.log(snapshot.val());\r\n      let result = snapshot.val();\r\n      this.setState({\r\n        classes:[result]\r\n      })\r\n    });\r\n  }\r\n\r\n  writeClassesData() {\r\n    firebase.database().ref(\"/UCSB/Classes\").set(this.state.classes);\r\n    console.log('DATA SAVED');\r\n  }\r\n\r\n  getClassesData () {\r\n    let ref = firebase.database().ref(\"/UCSB/Classes\");\r\n    ref.on(\"value\", snap => {\r\n      const classes = snap.val();\r\n      this.setState(\r\n        {\r\n          classes\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  renderList() {\r\n    return this.state.classes.map((indClass) => (\r\n        <ClassChat class = {indClass} \r\n        uid = {this.props.uid}\r\n        changeClass={this.props.changeClass}\r\n        activeClass = {this.props.activeClass}/>\r\n      ))\r\n  }\r\n\r\n  handleOnInputChange = (event) => {\r\n    const query = event.target.value.toUpperCase();\r\n    if(query === \"\")\r\n    {\r\n      this.getClassesData()\r\n    }\r\n    else{\r\n      this.setState({ query: query}, () => {\r\n        this.searchClass();\r\n      });\r\n    }\r\n  };\r\n  \r\n  render() {  \r\n    return(\r\n      <div>\r\n        <div>\r\n            <b>Search For Class Channel</b>\r\n              <div class=\"search bar4\">\r\n                  <form>\r\n                    <input\r\n                      type = \"text\"\r\n                      id = \"search\"\r\n                      className=\"search bar4\"\r\n                      //value={query}\r\n                      onChange={ this.handleOnInputChange }\r\n                      placeholder=\"input Class Name\"\r\n                    />\r\n                  </form>\r\n              </div>\r\n          </div>\r\n        {this.renderList()}\r\n      </div>\r\n    );   \r\n  }\r\n}\r\n\r\nexport default Class_list;","import React, { Component } from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport * as firebase from 'firebase';\r\n\r\nclass AddClass extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            title:\"\"\r\n        }\r\n    }\r\n\r\n    writeUserData = () => {\r\n        firebase.database().ref('/UCSB/Classes').set(this.state.title);\r\n    }\r\n\r\n    getUserData = () => {\r\n        let ref = firebase.database().ref('/UCSB/Classes');\r\n        ref.on('value', snapshot => {\r\n          const message = snapshot.val();\r\n          this.setState(\r\n            {\r\n              title: message\r\n            }\r\n          );\r\n        });\r\n        console.log('DATA RETRIEVED');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserData();\r\n    }\r\n      \r\n    componentDidUpdate(prevProps, prevState) {\r\n        // check on previous state\r\n        // only write when it's different with the new state\r\n        if (prevState !== this.state) {\r\n          this.writeUserData();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <form onSubmit={ this.handleSubmit }>\r\n                  <input type=\"text\" width=\"200px\" height=\"30px\" ref=\"title\" />\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={ () => {this.handleSubmit()} }>\r\n                      ADD CLASS\r\n                  </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    handleSubmit = (event) => {\r\n        let title = this.refs.title.value.toUpperCase();\r\n        if(!title) return;\r\n        for(var i = 0,len = this.state.title.length; i < len; i++)\r\n        {\r\n            if(title === this.state.title[i].title)\r\n            {\r\n                return\r\n            }\r\n        }\r\n        let curClass = this.state.title;\r\n        curClass.push({title})\r\n        this.setState({\r\n            curClass\r\n        })\r\n    }\r\n}\r\n\r\nexport default AddClass;","import React, { Component } from 'react';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Modal from 'react-modal';\r\nimport ClassList from './Class_list';\r\nimport AddClass from './AddClass';\r\nimport './class_room.css';\r\n\r\nconst style = {\r\n    margin: 0,\r\n    top: 'auto',\r\n    right: 20,\r\n    bottom: 20,\r\n    left: 'auto',\r\n    position: 'fixed',\r\n};\r\n\r\nclass ClassRoom extends Component {\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            activeClass: 0,\r\n            uid:props.uid,\r\n            showModal:false\r\n        }\r\n        this.changeClass = (title) => {\r\n          this.setState({\r\n            activeClass: title\r\n          })\r\n        }\r\n      }\r\n\r\n    openModal = () => {\r\n      this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModal = () => {\r\n      this.setState({ showModal: false });\r\n      console.log(this.state.uid);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.edu && \r\n                <Fab color=\"primary\" aria-label=\"add\" onClick = {() => this.openModal()} style = {style}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                }\r\n                <div>\r\n                    <ClassList \r\n                        uid = {this.props.uid}\r\n                        changeClass = {this.changeClass}\r\n                        activeClass = {this.state.activeClass}/>\r\n                </div>\r\n                <Modal \r\n                  isOpen={this.state.showModal}   // modal容器是否显示\r\n                  overlayClassName=\"overlay\"   // 指定div overlay的classname。（可覆盖默认样式）\r\n                  className=\"modal\"   // 指定div content的classname。（可覆盖默认样式）\r\n                  onAfterOpen={this.handleAfterOpenFunc}  // 在模态框打开后，执行的函数\r\n                >\r\n                <AddClass/>\r\n                  \r\n                  <button onClick={this.closeModal}>关闭模态框</button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassRoom;","import React, { Component } from 'react';\r\n\r\nclass Abour extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Abour;","import React, { Component } from 'react';\r\nimport Home from './Home'\r\nimport Roomate from './roommate'\r\nimport ClassRoom from './class_room'\r\nimport About from './About'\r\n\r\nclass body extends Component {\r\n    \r\n    displayContent = () => {\r\n        if(this.props.activeTab === 1)\r\n            return <Home/>\r\n        else if(this.props.activeTab === 2)\r\n            return <Roomate uid = {this.props.uid}/>\r\n        else if(this.props.activeTab === 3)\r\n            return <ClassRoom uid = {this.props.uid} edu = {this.props.edu}/>\r\n        else  if(this.props.activeTab === 4)\r\n            return <Home/>\r\n        else  if(this.props.activeTab === 6)\r\n            return <About/>\r\n        else\r\n            return <Home/>\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            this.displayContent()\r\n        );\r\n    }\r\n}\r\n\r\nexport default body;","const config = {\r\n    apiKey: \"AIzaSyCvDMG6RU1O0rkeXMsRoCkHf5zDf3CqC50\",\r\n    authDomain: \"ucsbforum.firebaseapp.com\",\r\n    databaseURL: \"https://ucsbforum.firebaseio.com\",\r\n  }\r\nexport default config;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Toaster, Intent } from '@blueprintjs/core';\r\nimport Rebase from 're-base';\r\nimport * as firebase from 'firebase';\r\nimport config from './config';\r\n\r\n\r\n\r\nconst app = firebase.initializeApp(config)\r\nconst base = Rebase.createClass(app.database())\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { app, base, googleProvider}","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport './App.css';\nimport Tablist from './Comp/Tablist'\nimport Body from './Comp/body'\nimport {app, googleProvider} from './Comp/fire'\nimport { Toaster, Intent } from '@blueprintjs/core';\n\nconst loginstyle = {\n  width:\"90%\",\n  maxWidth: \"315px\",\n  margin: \"20px auto\",\n  padding: \"10px\",\n  border: \"1px solid #ddd\",\n  borderRadius: \"5px\"\n}\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.authWithGoogle = this.authWithGoogle.bind(this)\n    this.authWithEmailPassward = this.authWithEmailPassward.bind(this)\n    this.state = {\n        activeTab: 1,\n        showModal: false,\n        authenicated: false,\n        uid:\"\",\n        redirect: false,\n        edu:false\n    }\n    this.changeTab = (id) => {\n      this.setState({\n        activeTab: id\n      })\n    }\n  }\n\n  componentWillMount(){\n    this.removeAuthListener = app.auth().onAuthStateChanged((user) => {\n      if(user){\n        console.log(user.email)\n        if(user.email.substr(user.email.length-3,3) !== \"edu\"){\n          this.setState({\n            authenicated: true,\n            uid:user.uid,\n            edu:true\n          })\n        }\n        else{\n          this.setState({\n            authenicated: true,\n            uid:user.uid,\n          })\n        }\n        console.log(user.uid)\n      }\n      else{\n        this.setState({\n          authenicated: false,\n          uid:\"\"\n        })\n      }\n    })\n  }\n  componentWillUnmount(){\n    //this.removeAuthListener();\n  }\n  componentDidMount(){\n\n  }\n\n  openModal = () => {\n    this.setState({ showModal: true });\n  }\n\n  closeModal = () => {\n    this.setState({ showModal: false });\n    console.log(this.state.uid);\n  }\n\n  // 模态框打开后，执行的函数\n  handleAfterOpenFunc = () => {\n    console.log('open~')\n  }\n\n  // 该函数，下面会有介绍\n  handleAfterCloseFunc = () => {\n    console.log('close~')\n  }\n\n  // 用于测试获取的DOM节点\n  openRef = () => {\n    console.log(this.overlayRef)\n    console.log(this.contentRef)\n  }\n\n  // 指定模态框的父级\n  getParent = () => {\n    return document.querySelector('#App');\n  }\n\n  Logout = () => {\n    app.auth().signOut().then((user) => {\n        this.setState({\n            authenicated: false,\n            uid:\"\"\n        })\n    })\n  }\n\n  authWithGoogle(){\n    console.log(\"google\")\n    app.auth().signInWithPopup(googleProvider).then((result, error) => {\n        if(error){\n            this.toaster.show({intent: Intent.DANGER, message:\"unable to sign in with google\"})\n        }\n        else{\n            this.setState({ redirect: true })\n        }\n    })\n}\n\nauthWithEmailPassward(event){\n    event.preventDefault()\n    console.table([{\n        email: this.emailInput.value,\n        password: this.passwordInput.value\n    }])\n    const email = this.emailInput.value\n    const password = this.passwordInput.value\n\n    app.auth().fetchSignInMethodsForEmail(email).then((providers) => {\n        if(providers.length === 0){\n            //create user\n            return app.auth().createUserWithEmailAndPassword(email, password)\n        }\n        else if(providers.indexOf(\"password\") === -1){\n            //used google\n            this.loginForm.reset()\n            this.toaster.show({ intent: Intent.WARNING, message: \"Try other log in\"})\n        }\n        else{\n            //sign user in\n            //this.loginForm.reset()\n            //this.setState({redirect: true})\n            return app.auth().signInWithEmailAndPassword(email, password)\n        }\n    })\n    .then((data) => {\n        if(data.user.uid && data.user.email){\n            this.loginForm.reset()\n            this.setState({\n                redirect: true,\n                uid: data.user.uid\n            })\n        }\n    })\n    .catch((error) => {\n        this.toaster.show({intent: Intent.DANGER, message: error.mesaage})\n    })\n}\n\n\n  render() {\n\n    return (\n      <div>\n        <div className = \"header\">\n          \n            <h1>UCSB小贴吧</h1>\n            {!this.state.authenicated && <h3 onClick={this.openModal}>Login</h3>}{/* 登陆后直接让login按钮消失嘻嘻*/}\n            {this.state.authenicated && <h3 onClick={this.Logout}>Logout</h3>}\n            {/*this.state.authenicated && <h3 onClick={this.openModal}>Login</h3>\n              未来加入更多功能比如用户自己页面之类的，可以查看自己的帖子\n            */}\n        </div>\n        \n        <div className = \"navbar\">\n          <Tablist  \n          changeTab={this.changeTab}\n          activeTab={this.state.activeTab}\n          />\n          \n        </div>\n        <div className = \"mainbody\">\n          <Body activeTab = {this.state.activeTab} uid = {this.state.uid} edu = {this.state.edu}/>\n        </div>\n\n        <Modal \n          isOpen={this.state.showModal}   // modal容器是否显示\n          overlayClassName=\"overlay\"   // 指定div overlay的classname。（可覆盖默认样式）\n          className=\"modal\"   // 指定div content的classname。（可覆盖默认样式）\n          //style={{ overlay: {}, content: {} }}  // div overlay和content的样式，也可以直接在这里指定。\n          onAfterOpen={this.handleAfterOpenFunc}  // 在模态框打开后，执行的函数\n\n          // 当请求关闭模态框时，执行的函数！\n          // （模态框不一定会关闭，因为是否关闭取决于isOpen特性，如果在当前函数中，改变了isOpen:false，才会关闭）\n          //   只有两种情况，才会执行目标函数。\n          //   1，当shouldCloseOnOverlayClick为true时，在div overlay上点击，会触发\n          //   2，当shouldCloseOnEsc为true时，并且选中了div content\n          //        也就是说，如果shouldFocusAfterRender也为true，按esc键就会触发。\n          //        或者，shouldFocusAfterRender为false时，手动选中div content，按esc键就会触发。\n          //onRequestClose={this.handleAfterCloseFunc}\n          //closeTimeoutMS={1000} // 指定，在发出关闭命令后，模态框延迟关闭的时间，默认0\n          shouldCloseOnOverlayClick={true}   // 指定在div overlay上点击，是否关闭模态框，默认true\n          //shouldFocusAfterRender={false}  //指定模态框出现后，是否被默认选中，默认true\n          //shouldCloseOnEsc={true}  // 指定按esc键，是否关闭模态框，默认true（要选中div content，才有效）\n          //shouldReturnFocusAfterClose={false} // 指定是否应将焦点恢复到，显示前具有焦点的元素，默认true\n//\n          //overlayRef={node => this.overlayRef = node}   // 可以获取div overlay的整个DOM节点\n          //contentRef={node => this.contentRef = node}   // 可以获取div content的整个DOM节点\n          //parentSelector={this.getParent}   // 配合指定的方法，指定\"Modal单独生成的DOM\"的父级元素，该demo中，指定到了div App中\n          //ariaHideApp={false}   //如果没有添加到某个DOM节点中，就会显示警告，为了不显示警告，设置为false，默认true。\n\n          // portalClassName=\"protal\"   // 指定div Portal的classname（因为没有默认样式，所以一般不用指定）。\n          // contentLabel=\"一个demo\"   // 显示在div content的自定义属性:aria-label=\"通告给屏幕的内容\"。\n        >\n          \n          {!this.state.redirect && \n            <div style = {loginstyle}>\n                <Toaster ref = { (element) => { this.toaster = element } }/>\n\n                <button style = {{width:\"100%\", backgroundColor: \"#6bc4ff\", color:\"white\"}} class = \"btn-secondary\" onClick = { () => { this.authWithGoogle() }}>\n                    Sign In With Google\n                </button>\n\n                <hr/>\n                <form onSubmit = {(event) => { this.authWithEmailPassward(event) } } ref = { (form) => { this.loginForm = form }}>\n                    <div>\n                        <h5>Note</h5>\n                            If you don't have an account, this form will create your account.\n                    </div>\n                    <hr/>\n                    <label>\n                        <b>Email</b>\n                        <input style = {{width: \"100%\"}} className = \"input\" name = \"email\" type = \"email\" ref = {(input) => {this.emailInput = input}} placeholder = \"Email\"/>\n                    </label>\n                    <label>\n                    <b>Passward</b>\n                        <input style = {{width: \"100%\"}} className = \"input\" name = \"passward\" type = \"passward\" ref = {(input) => {this.passwordInput = input}} placeholder = \"Passward\"/>\n                    </label>\n                    <input style = {{width: \"100%\", backgroundColor: \"#6bc4ff\", color:\"white\"}} type = \"submit\" value = \"Log In\"/>\n                </form>    \n            </div>\n          }\n          {this.state.redirect && \n            <div style = {loginstyle}>\n              <div style = {{fontSize:\"xx-large\", fontFamily:\"cursive\", float:\"center\"}}>\n                  You\n              </div>\n              <div style = {{fontSize:\"xx-large\", fontFamily:\"cursive\", float:\"center\"}}>\n                  have \n              </div>\n              <div style = {{fontSize:\"xx-large\", fontFamily:\"cursive\", float:\"center\"}}>\n                   successfully \n              </div>\n              <div style = {{fontSize:\"xx-large\", fontFamily:\"cursive\", float:\"center\"}}>\n                  logged in! \n              </div>\n              {\n                this.state.edu && \n              <div style = {{fontSize:\"x-large\", fontFamily:\"cursive\", float:\"center\"}}>\n                  It is detected that you are not a student from a US college. If you are, please sign in with your .edu email account.\n              </div>\n              }\n            </div>\n          }\n          <button onClick={this.closeModal}>关闭模态框</button>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}